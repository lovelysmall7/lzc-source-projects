
var option = {
	color : [
		'#90ED7D', '#FA8072', '#4DBBF1'
	],
	tooltip : {
		trigger : 'axis',
		axisPointer : { // 坐标轴指示器，坐标轴触发有效
			type : 'shadow' // 默认为直线，可选为：'line' | 'shadow'
		}
	},

	grid : {
		left : '3%',
		right : '4%',
		bottom : '3%',
		containLabel : true
	},
	toolbox : {
		feature : {
			dataView : {
				title : '666',
				show : true,
				readOnly : false
			},
			magicType : {
				show : true,
				type : [ 'line', 'bar' ]
			},
			restore : {
				show : true
			},
			saveAsImage : {
				show : true
			}
		}
	},
    calculable : true,
    dataZoom : {
        show : true,
        realtime : true,
        start : 0
    },

    
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    toolbox: {
        feature: {
            dataView: {
            	title:'Data view',
            	lang: ['Data view','Close','Refresh'],
                show: true,
                readOnly: false
            },
            magicType: {
            	title:{line:'Line',bar:'Bar'},
                show: true,
                type: ['line', 'bar']
            },
            restore: {
            	title:'Restore',
//            	title:,'Bar','restore','Save it as a picture']
                show: true
            }
         /*   ,
            saveAsImage: {
            	title:'Save as Image',
                show: true
            }*/
        }
    },
    legend: {
        data: ['Qualified', 'Unqualified', 'Ratio']
    },
    xAxis: [{
        type: 'category',
        data:[],
        axisLabel: {
            formatter: '{value}',
            interval:0,  
            rotate:60  
        }
    }],
    yAxis: [{
        type: 'value',
        name: 'Number of parts',
        min: 0,
        axisLabel: {
            formatter: '{value}'
        }
    }, {
        type: 'value',
        name: 'Ratio',
        min: 0,
        axisLabel: {
            formatter: '{value}',
        },
        normal:{
            textStyle:{
                fontsize:'1rem'
            }
        }
    }],
    series: [{
        name: 'Qualified',
        type: 'bar',
        data: [],
        stack: 'total',
        label: {
            normal: {
                show: false,
                position: 'insideRight'
            }
        },
    }, {
        name: 'Unqualified',
        type: 'bar',
        stack: 'total',
        label: {
            normal: {
                show: false,
                position: 'insideRight'
            }
        },
        data: []
    }, {
        name: 'Ratio',
        type: 'line',
        yAxisIndex: 1,
        data: []
    }]
};
//查询条件更新图表
function searchComponent() {
	var startTime;
	var endTime;
	startTime = $('#demo').val();
	endTime = $('#demo1').val();
	if (startTime == "" || endTime == "") {
		$.messager.show({ // show error message
			title : 'Message',
			msg : "The starttime or endtime can not be empty."
		});
		return;
	}
	$.post("/SmartCC/smartCCpart2",
		{
			method : "loadChartByTime",
			startTime : startTime,
			endTime : endTime
		}, function(data) {
			if (data.code == 0) {
				option.xAxis[0].data = data.xAxis;
				option.yAxis[0].max = data.maxY;
				option.yAxis[1].max = data.maxY1;
				option.series[0].data = data.okNumList;
				option.series[1].data = data.nokNumList;
				option.series[2].data = data.ratioList;
				option.dataZoom.end = data.dataXoomEnd;// 设置滑动条位置
				// 使用刚指定的配置项和数据显示图表。
				mypie.setOption(option, true);
			}
		}, "json")
}
var dataBJ = [
	[ 10, 0.15, "C01" ],
	[ 50, 0.20, "C03" ],
	[ 150, 0.5, "C05" ]
];

var schema = [
	{
		name : 'frequency',
		index : 0,
		text : 'Check times'
	},
	{
		name : 'Error rate',
		index : 1,
		text : 'Error rate'
	},
	{
		name : 'Component name',
		index : 2,
		text : 'Component name'
	}
];


var itemStyle = {
	normal : {
		opacity : 0.8,
		shadowBlur : 10,
		shadowOffsetX : 0,
		shadowOffsetY : 0,
		shadowColor : 'rgba(0, 0, 0, 0.5)'
	}
};

var option1 = {
	backgroundColor : '#56a2cf',
	color : [
		'#dd4444', '#fec42c', '#80F1BE'
	],
	legend : {
		y : 'top',
		data : [],
		textStyle : {
			color : '#fff',
			fontSize : 16
		}
	},
	grid : {
		x : '10%',
		x2 : 150,
		y : '18%',
		y2 : '10%'
	},
	tooltip : {
		padding : 10,
		backgroundColor : '#222',
		borderColor : '#777',
		borderWidth : 1,
		formatter : function(obj) {
			var value = obj.value;
			return '<div style="border-bottom: 1px solid rgba(255,255,255,.3); font-size: 18px;padding-bottom: 7px;margin-bottom: 7px">'
				+ obj.seriesName + ' ' + value[2]
				+ '</div>'
				+ schema[2].text + '：' + value[2] + '<br>'
				+ schema[1].text + '：' + value[1] + '<br>'
				+ schema[0].text + '：' + value[0] + '<br>';
		}
	},
	xAxis : {
		type : 'value',
		name : 'Check times',
		nameGap : 16,
		nameTextStyle : {
			color : '#fff',
			fontSize : 14
		},
		max : 200,
		splitLine : {
			show : false
		},
		axisLine : {
			lineStyle : {
				color : '#eee'
			}
		}
	},
	yAxis : {
		type : 'value',
		name : 'Error rate',
		nameLocation : 'end',
		nameGap : 20,
		nameTextStyle : {
			color : '#fff',
			fontSize : 16
		},
		axisLine : {
			lineStyle : {
				color : '#eee'
			}
		},
		splitLine : {
			show : false
		}
	},
	visualMap : [
		{
			left : 'right',
			top : '3%',
			dimension : 0,
			min : 0,
			max : 20,
			itemWidth : 30,
			itemHeight : 120,
			calculable : true,
			precision : 0.1,
			text : [ 'Circular size：Check times' ],
			textGap : 30,
			textStyle : {
				color : '#fff'
			},
			inRange : {
				symbolSize : [ 10, 70 ]
			},
			outOfRange : {
				symbolSize : [ 10, 70 ],
				color : [ 'rgba(255,255,255,.2)' ]
			},
			controller : {
				inRange : {
					color : [ '#c23531' ]
				},
				outOfRange : {
					color : [ '#444' ]
				}
			}
		},
		{
			left : 'right',
			bottom : '9%',
			dimension : 1,
			min : 0,
			max : 1,
			itemHeight : 120,
			calculable : true,
			precision : 0.1,
			text : [ 'Light and shade：Error rate' ],
			textGap : 30,
			textStyle : {
				color : '#fff'
			},
			inRange : {
				colorLightness : [ 1, 0.5 ]
			},
			outOfRange : {
				color : [ 'rgba(255,255,255,.2)' ]
			},
			controller : {
				inRange : {
					color : [ '#c23531' ]
				},
				outOfRange : {
					color : [ '#444' ]
				}
			}
		}
	],
	series : [
		{
			name : 'Component',
			type : 'scatter',
			itemStyle : itemStyle,
			data : []
		}
	]
};
//格式化每一行的状态列
function formatState(val, row) {
	if (val == 0) {
		return "<span style='color: #90ED7D';font-size:16px;font-weight:700;>&#10004</span>"
	}
	if (val == 1) {
		return "<span style='color: #FA8072;font-size:14px;font-weight:700;'>&#10006</span>"
	}
	if (val == -1) {
		return "<span style='color: #4DBBF1'>not checked</span>"
	}
}
	
	//格式化每一行的状态列
		function formatterNum(val,row){
			//alert(val);
			if(val == 1){
				return "<img src='images/1st.PNG' style='height:19px;width:19px'/>" 
			}
			if(val == 2){
				return "<img src='images/2nd.PNG' style='height:19px;width:19px'/>" 
			}
			if(val == 3){
				return "<img src='images/3rd.PNG' style='height:19px;width:19px'/>" 
			}
		}
function formatComment(val,row){
	return "<a href='javascript:void(0)' onclick='showComment("+row+")'>Show</a>";
}
function showComment(row){
	alert(row.remark);
}
function updateTasks() {
	var checkResult;
	var comment;
	var rows = $('#taskTable1').datagrid('getSelections');
	var tasksJson = JSON.stringify(rows);
	var res = $('input:radio:checked').val();
	//alert(res);
	if (res == 'Qualified') {
		checkResult = 0;
	} else if (res == 'Unqualified') {
		checkResult = 1;
	}
	comment = $('#check-comment').val();

	$.post("/SmartCC/smartCCpart2",
		{
			method : "submitCheckResult",
			tasksJson : tasksJson,
			checkResult : checkResult,
			comment : comment
		}, function(data) {
			if (data.code == 0) {
				//todo 刷新dg
				//alert("Distribution success");
				$.messager.show({ // show error message
					title : 'Message',
					msg : "update success."
				});

				$('#taskTable1').datagrid('loadData', data.tList);
				$('#dlg').dialog('close'); // close the dialog
			} else {
				$.messager.show({ // show error message
					title : 'Message',
					msg : data.msg
				})
			}
		}, "json");
}
function searchTaskList() {
	var component = $("#component").textbox('getValue');
	var worderId = $("#cc").combobox('getValue');
	var station = $("#station").textbox('getValue');
	var checkResult = $("#checkResult").val();
	$.post("/SmartCC/smartCCpart2",
		{
			component : component,
			workerId : worderId,
			station : station,
			checkResult : checkResult,
			method : "searchTaskList"
		}, function(data) {
			if (data.code == 0) {
				$('#taskTable1').datagrid('loadData', data.tList);
			} else {
				$.messager.show({ // show error message
					title : 'Message',
					msg : data.msg
				})
			}
		}, "json");
}
function searchTopTen() {
	var searchDate;
	searchDate = $('#demo3').val();
	if (searchDate == "") {
		$.messager.show({ // show error message
			title : 'Message',
			msg : "Please choose a date."
		});
		return;
	}
	$.post("/SmartCC/smartCCpart2",
		{
			method : "searchPersonByDate",
			searchDate : searchDate
		}, function(data) {
			if (data.code == 0) {
				$('#top10Table').datagrid('loadData', data.pList);
			} else {
				$.messager.show({ // show error message
					title : 'Message',
					msg : data.msg
				})
			}
		}, "json")
}
;