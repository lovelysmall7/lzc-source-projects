<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，为了对sql语句进行隔离，方便管理 ，mapper开发dao方式，使用namespace有特殊作用 -->
<mapper namespace="com.lzc.demo.model.ComponentCheckInfo">
<!-- 在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象
mapper.xml以statement为单位管理sql语句
 -->
    <!-- 根据id查询用户信息 -->
    <!-- 
        id：唯一标识 一个statement
        #{}：表示 一个占位符，如果#{}中传入简单类型的参数，#{}中的名称随意
        parameterType：输入 参数的类型，通过#{}接收parameterType输入 的参数
        resultType：输出结果 类型，不管返回是多条还是单条，指定单条记录映射的pojo类型
     -->
    <select id="findAll" parameterType="com.lzc.demo.model.ComponentCheckInfo" resultType="com.lzc.demo.model.ComponentCheckInfo"> 
    	SELECT t.*,c.type 
    	FROM component_check_info t 
    	left outer join component c on t.componentName = c.componentName
    	where 1 = 1 
    	<if test="componentName != null and componentName != '' ">
    		and t.componentName = #{componentName}
    	</if>
    	<if test="stationName != null and stationName != '' ">
    		and t.stationName = #{stationName}
    	</if>
    	<if test="workerId != null and workerId != '' ">
    		and t.workerId = #{workerId}
    	</if>
    	
    	order by t.componentName asc
    </select>
   
     <select id="findAllOnCurrentDay" parameterType="com.lzc.demo.model.ComponentCheckInfo" resultType="com.lzc.demo.model.ComponentCheckInfo"> 
    	SELECT t.*,c.type 
    	FROM component_check_info t 
    	left outer join component c on t.componentName = c.componentName
    	where date(t.createTime) = curdate() 
    	<if test="componentName != null and componentName != '' ">
    		and t.componentName = #{componentName}
    	</if>
    	<if test="stationName != null and stationName != '' ">
    		and t.stationName = #{stationName}
    	</if>
    	<if test="workerId != null and workerId != '' ">
    		and t.workerId = #{workerId}
    	</if>
    	
    	order by t.componentName asc
    </select>
    <insert id="insert" parameterType="com.lzc.demo.model.ComponentCheckInfo">
    	insert into component_check_info (
    		id,
    		taskNo,
    		componentName,
    		componentId,
    		stationName,
    		workerId,
    		checkResult,
    		createTime,
    		comment
    	)values(
    		#{id},
    		#{taskNo},
    		#{componentName},
    		#{componentId},
    		#{stationName},
    		#{workerId},
    		#{checkResult},
    		#{createTime},
    		#{comment}
    	)
    </insert>
    <!-- 根据id查找对象 -->
    <select id="findById" parameterType="java.lang.String" resultType="com.lzc.demo.model.ComponentCheckInfo">
    	select * from component_check_info where id = #{value}
    </select>
    <!-- 更新一条数据 -->
    <update id="update" parameterType="com.lzc.demo.model.ComponentCheckInfo">
    	update component_check_info set 
    		componentName = #{componentName} ,
    		orderNum = #{orderNum},
    		workerId = #{workerId} ,
    		state = #{state}
    	where id = #{id}
    </update>
    <delete id="deleteByID" parameterType="java.lang.String">
    	delete from component_check_info where id = #{value}
    </delete>
   
   
   
</mapper>